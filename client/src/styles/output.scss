@use 'variables';
@use 'mixins';

#output-container {
  @include mixins.flex-centered;
  flex-direction: column;
  height: 45%;
  width: 100%;
  background-color: transparent;
  backdrop-filter: blur(5px);
  color: white;
  border-radius: 0 20px 0 20px;
  border: 2px solid white;
  //border: 2px solid white;
  //transition: all 0.1s ease-in-out;

  &:not(.loading):not(.error):focus, // &:not(.loading):not(.error):has(> textarea:focus)
  &:not(.loading):not(.error):focus-within {
    border-color: variables.$accent-color;
    box-shadow: 0px 0px 3px 3px variables.$accent-color;
  }

  &.fullscreen {
    height: 100%;
  }

  &.loading {
    border-color: variables.$accent-color;
    animation: flashShadowLoading 1s ease-in-out infinite;
  }

  &.error {
    text-align: center;
    border-color: variables.$error-color;
    animation: flashShadowError 1s ease-in-out infinite;
  }

  &:focus {
    border-color: variables.$accent-color;
  }

  #format-container {
    width: 100%;
    height: 15%;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: row;

    #fullscreen-button {
    }

    #buttons-container {
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-direction: row;
      width: 50%;
    }

    #metadata-container {
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-direction: row;
      width: 30%;


      .data {
        @include mixins.flex-centered;
        flex-direction: column;
        height: 100%;
        width: fit-content;
        position: relative;
        white-space: nowrap;

        p {
          height: fit-content;
          @include mixins.flex-centered;
          width: 100%;
          -webkit-user-select: none; /* Safari */
          -moz-user-select: none; /* Firefox */
          -ms-user-select: none; /* IE10+/Edge */
          user-select: none; /* Standard */
        }

        #value {
          position: absolute;
          top: -20px;
          left: 50%;
          transform: translateX(-50%);
        }

        #text {
          font-size: 0.8rem;
          color: variables.$placeholder-color;
          position: absolute;
          bottom: -20px;
          left: 50%;
          transform: translateX(-50%);
        }
      }
    }
  }

  #textareas-container {
    width: 100%;
    height: 100%;
    @include mixins.flex-centered;
    flex-direction: row;
    gap: 0.5rem;

    .textarea-container {
      width: 100%;
      height: 100%;
      @include mixins.flex-centered;
      flex-direction: row;
      border-radius: 0 0 0 20px;
      position: relative;

      &:only-child {
        width: 100%;
      }

      &:not(:only-child) {
        width: 50%;
      }

      &:nth-child(2) {
        border-radius: 0;
      }

      #copy-button {

      }

      .output-text {
        resize: none;
        width: 100%;
        height: 100%;
        padding: 0.75rem;
        outline: none;
        border-radius: inherit;
      }
    }
  }
}

@keyframes flashShadowLoading {
  0% {
    box-shadow: 0 0 1px 1px variables.$accent-color;
  }
  50% {
    box-shadow: 0 0 4px 4px variables.$accent-color;
  }
  100% {
    box-shadow: 0 0 1px 1px variables.$accent-color;
     }
}

@keyframes flashShadowError {
  0% {
    box-shadow: 0 0 1px 1px variables.$error-color;
  }
  50% {
    box-shadow: 0 0 4px 4px variables.$error-color;
  }
  100% {
    box-shadow: 0 0 1px 1px variables.$error-color;
  }
}