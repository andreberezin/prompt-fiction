@use 'variables';
@use 'mixins';

#output-container {
  @include mixins.flex-centered;
  flex-direction: column;
  height: 45%;
  width: 100%;
  background-color: transparent;
  backdrop-filter: blur(5px);
  color: variables.$text-color-light;
  border-radius: 0 20px 0 20px;
  border: 2px solid variables.$border-color;
  box-shadow: 0 0 10px 0 variables.$shadow-color;
  position: relative;

  &:not(.loading):not(.error):focus, // &:not(.loading):not(.error):has(> textarea:focus)
  &:not(.loading):not(.error):focus-within {
    border-color: variables.$accent-color;
    box-shadow: 0px 0px 3px 3px variables.$accent-color;
  }

  &.fullscreen {
    height: 100%;
    width: 98vw;
  }

  &.loading {
    border-color: variables.$accent-color;
    animation: flashShadowLoading 1s ease-in-out infinite;
  }

  &.error {
    text-align: center;
    border-color: variables.$error-color;
    animation: flashShadowError 1s ease-in-out infinite;
  }

  &:focus {
    border-color: variables.$accent-color;
  }

  #upper-container {
    width: 100%;
    height: 15%;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: row;
    background-color: variables.$bg-color-dark;
    border-radius: 0 20px 0 0;

    div {
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-direction: row;
      //flex: 1;
      //gap: 2rem;
    }

    #button-container {
      width: 30%;
      justify-content: space-evenly;
      align-items: flex-end;
      button {

      }
    }

    #fullscreen-button {
    }

    #format-container {
      width: 30%;
      justify-content: space-evenly;
      align-items: flex-start;
    }

    #metadata-container {
      width: 40%;

      .data {
        @include mixins.flex-centered;
        flex-direction: column;
        height: 100%;
        width: fit-content;
        position: relative;
        white-space: nowrap;

        p {
          @include mixins.flex-centered;
          height: fit-content;
          width: 100%;
          -webkit-user-select: none; /* Safari */
          -moz-user-select: none; /* Firefox */
          -ms-user-select: none; /* IE10+/Edge */
          user-select: none; /* Standard */
        }

        .value {
          position: absolute;
          top: -17px; // absolutely ridiculous styling
          left: 50%;
          transform: translateX(-50%);

          &#generation-timer {
            //top: -17px;
            display: inline-block;
            min-width: 6ch;
            width: 6ch;
            text-align: right;
            font-size: 1.5rem;
            padding-right: 0.5rem;

            &::after {
              content: attr(data-attemptcount);
              position: absolute;
              right: -10px;
              top: -3px;
              font-size: 0.9rem;
            }
          }
        }

        .text {
          font-size: 0.8rem;
          color: variables.$placeholder-color;
          position: absolute;
          bottom: -20px;
          left: 50%;
          transform: translateX(-50%);

          //&#attempts-count {
          //  bottom: 0;
          //  transform: none;
          //  left: 0;
          //}
        }
      }
    }
  }
  #lower-container {
    width: 100%;
    height: 100%;
    @include mixins.flex-centered;
    flex-direction: row;
    background-color: variables.$bg-color-light;
    border-radius: 0 0 0 20px;

    #textareas-container {
      flex: 1;
      height: 100%;
      @include mixins.flex-centered;
      flex-direction: row;
      gap: 0.5rem;
      background-color: transparent;

      .textarea-container {
        width: 100%;
        height: 100%;
        @include mixins.flex-centered;
        flex-direction: row;
        border-radius: 0 0 0 20px;
        position: relative;
        background-color: transparent;

        &:not(:nth-child(1)) {
          border-radius: 0;
        }

        > :first-child,
        > :nth-child(2) {
          flex: 1; // take remaining space equally
        }

        > :first-child {
          border-radius: 0 0 0 20px;
        }

        #copy-button {

        }

        .output-text {
          resize: none;
          width: 100%;
          max-width: 100%;
          height: 100%;
          padding: 0.75rem 0.75rem 4rem 0.75rem;
          outline: none;
          border-radius: inherit;
          border: none;
          border-top: 1px solid variables.$placeholder-color;
        }

        #plainText-text {
          cursor: default;
        }
      }
    }
    > :nth-child(2) {
      flex: 0 0 3.5rem; // fixed width
    }
  }
}

@keyframes flashShadowLoading {
  0% {
    box-shadow: 0 0 1px 1px variables.$accent-color;
  }
  50% {
    box-shadow: 0 0 4px 4px variables.$accent-color;
  }
  100% {
    box-shadow: 0 0 1px 1px variables.$accent-color;
     }
}

@keyframes flashShadowError {
  0% {
    box-shadow: 0 0 1px 1px variables.$error-color;
  }
  50% {
    box-shadow: 0 0 4px 4px variables.$error-color;
  }
  100% {
    box-shadow: 0 0 1px 1px variables.$error-color;
  }
}